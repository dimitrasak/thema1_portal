    <style>
            
    * {
      font-family: "Lora", serif;
    }
    
    .title {
      text-align: center;
    }
    
    .posts {
      margin-top: 50px;
      display: flex;
      flex-direction: row;  
      justify-content: space-around;
      flex-wrap: wrap;
    }
    
    .post-card {
      display: flex;
      flex-direction: column;
      min-width: 300px;
      max-width: 300px;
      height: 400px;
      box-shadow: 1px 1px rgb(68, 68, 68);
      border: 1px solid rgb(68, 68, 68);
      border-radius: 5px;
      margin: 20px 0px;
    }
    
    .image {
      width: 100%;
      height: 170px;
    }
    
    .body-trunc {
      margin-left: 10px;
      margin-right: 10px;
    }

    .new-post{
        display: flex;
        justify-content: space-between;
        margin: 5px 0px;
        align-items: center;
        
    }

    </style>
    <script>
        var pusher = new Pusher('YOUR_APP_KEY', {
          cluster: 'eu',
          encrypted: true
        });
    </script>
    
    <div class="wrapper">
        <div class="title">
            <h1 style="color:green;">Main Feed  </h1>
            <p> <em> New posts will be displayed in realtime </em></p>
            
            <!--<%= link_to 'Create A New Post', posts_feed_create_path, id: 'posts-link'%>-->
            <button id="myButton" >Create A New Post</button>
            <br>
            <div class="sort-options">
                <label for="sortSelect">Sort by:</label>
                <select id="sortSelect" onchange="sortPosts()">
                    <option value="original">Original Order</option>
                    <option value="category">Category</option>
                    <option value="date">Date</option>
                </select>
            </div>
            <div class="search-author">
                <label for="authorSearch">Search by Author:</label>
                <input type="text" id="authorSearch" placeholder="Enter author's name">
                <button onclick="searchByAuthor()">Search</button>
            </div>
        </div>
    
        <div class="posts" id="post_section">
            <% @posts_feed.each do |post| %>
                <div class="post-card">
                    <img class="image" src="<%= post.media %>">
                    <div class="title">
                        <h2><%= post.title %></h2>
                    </div>
                    <div class="body-trunc">
                        <p><%= post.body %></p>
                    </div>
                    <div class="body-trunc">
                        <p> Category of post: <strong><%= post.category%></strong> </p>
                    </div>
                    <div class="body-trunc">
                        <p> Posted by: <em> <%= post.author%> </em></p>
                    </div>
                    <div class="body-trunc date" >
                        <p>Created on: <%= post.created_at.strftime("%B %d, %Y %I:%M %p") %></p>
                    </div>
                    <div class="body-trunc">
                        <% if current_user && (current_user.name == post.author || current_user.email == post.author) %>
                            <%= link_to 'Delete Post', destroy_post_path(post.id), data: { confirm: 'Are you sure?' } %>
                        <% end %>
                    </div>
                </div>
            <% end %>
        </div>
    </div>  
    
    <script>
        var channel = pusher.subscribe('posts-channel');
        channel.bind('new-post', function(data) {
            let post_media = data.media;
            let post_id = data.id
            let post_body = data.body;
            let post_title = data.title;
    
            let div = document.getElementById('post_section');
            let new_content = document.createElement("div");
            new_content.innerHTML = `
                <div class="post-card">
                    <img class="image" src="${post_media}">
                    <div class="title">
                        <h2>${post_title}</h2>
                    </div>
                    <div class="body-trunc">
                        <p>${post_body}</p>
                    </div>
                </div>`;
            div.insertBefore(new_content, div.firstChild);
        });

        document.getElementById("myButton").onclick = function () {
            location.href = "http://localhost:3000/posts_feed/create";
    };
    var originalOrder = Array.from(document.getElementsByClassName("post-card"));

    function sortPosts() {
        var sortSelect = document.getElementById("sortSelect");
        var sortBy = sortSelect.value;

        // Get the post section container
        var postSection = document.getElementById("post_section");

        // Get all post cards
        var postCards = postSection.getElementsByClassName("post-card");

        // Convert HTMLCollection to Array for easier manipulation
        var postArray = Array.from(postCards);

        // Sort the posts based on the selected option
        if (sortBy === "original") {
            // Sort by the original order (do nothing, as posts are already in the original order)
            postArray = originalOrder;
        } else if (sortBy === "category") {
            postArray.sort((a, b) => {
                var categoryA = a.querySelector('.body-trunc strong').innerText.toLowerCase();
                var categoryB = b.querySelector('.body-trunc strong').innerText.toLowerCase();
                return categoryA.localeCompare(categoryB);
            });
        } else if (sortBy === "date") {
            postArray.sort((a, b) => {
                // Add your logic to extract and compare date information from posts
                // For simplicity, assuming the date is in a specific format
                var dateA = new Date(a.querySelector('.date').innerText);
                var dateB = new Date(b.querySelector('.date').innerText);
                return dateA - dateB;
            });
        }

        // Remove existing posts from the container
        while (postSection.firstChild) {
            postSection.removeChild(postSection.firstChild);
        }

        // Append sorted posts back to the container
        postArray.forEach((post) => {
            postSection.appendChild(post);
        });
    }

     function searchByAuthor() {
        var authorSearchInput = document.getElementById("authorSearch");
        var authorName = authorSearchInput.value.toLowerCase();

        // Get all post cards
        var postCards = document.getElementsByClassName("post-card");

        // Iterate through each post card and show/hide based on author name
        for (var i = 0; i < postCards.length; i++) {
            var postAuthor = postCards[i].querySelector('.body-trunc em').innerText.toLowerCase();
            var displayStyle = (postAuthor.includes(authorName)) ? 'flex' : 'none';
            postCards[i].style.display = displayStyle;
        }
    }
    </script> 
